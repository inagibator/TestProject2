// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 24.01.2019 2:17:31 (- $Rev: 12980 $, 360576093).

[
  uuid(5A1613E3-9002-4EA5-929D-E7EDAD3D5B12), 
  version(1.0), 
  helpstring("K_CMSCom Library")
    
]
library K_CMSCom
{

  importlib("stdole2.tlb");

  interface ID4WCMServer;
  coclass D4WCMServer;


  [
    uuid(A1B13E5F-B992-46A0-B36D-0AD02F294B81), 
    version(1.0), 
    helpstring("Interface for D4WCMServer Object"), 
    oleautomation
  ]
  interface ID4WCMServer: IUnknown
  {
    [id(0x00000065)]
    HRESULT _stdcall SetPatientsInfo([in] BSTR APatientsInfo);
    [id(0x00000066)]
    HRESULT _stdcall SetProvidersInfo([in] BSTR AProvidersInfo);
    [id(0x00000067)]
    HRESULT _stdcall SetLocationsInfo([in] BSTR ALocationsInfo);
    [id(0x00000068)]
    HRESULT _stdcall SetCurContext([in] long APatientID, [in] long AProviderID, [in] long ALocationID);
    [id(0x00000069)]
    HRESULT _stdcall SetWindowState([in] long AWinState);
    [id(0x0000006A)]
    HRESULT _stdcall SetCurContextEx([in] long APatientID, [in] long AProviderID, [in] long ALocationID, [in] long ATeethRightSet, [in] long ATeethLeftSet);
    [id(0x0000006B)]
    HRESULT _stdcall GetPatientMediaCounter([in] long APatID, [out] VARIANT* AMediaCounter);
    [id(0x0000006C)]
    HRESULT _stdcall GetWindowHandle([out] VARIANT* AWinHandle);
    [id(0x0000006D)]
    HRESULT _stdcall SetIniInfo([in] BSTR AIniInfo);
    [id(0x0000006E)]
    HRESULT _stdcall GetServerInfo([in] long AServerCode, [out] VARIANT* AServerInfo);
    [id(0x0000006F)]
    HRESULT _stdcall ExecUICommand([in] long AComCode, [in] BSTR AComInfo);
    [id(0x00000070)]
    HRESULT _stdcall SetCodePage([in] long ACodePageID);
    [id(0x00000071)]
    HRESULT _stdcall GetSlidesThumbnails([in] BSTR AMObjIDs, [in] long AMode, [out] VARIANT* ASThumbs);
    [id(0x00000072)]
    HRESULT _stdcall GetSlidesAttrs([in] long APatID, [in] long AMode, [in] BSTR AFields, [out] VARIANT* ARData);
    [id(0x00000073)]
    HRESULT _stdcall HPSetCurContext([in] long APatientID, [in] long AProviderID, [in] long ALocationID);
    [id(0x00000074)]
    HRESULT _stdcall HPSetVisibleIcons([in] BSTR AMObjIDs, [in] long AMode);
    [id(0x00000075)]
    HRESULT _stdcall HPViewMediaObject([in] BSTR AViewID);
    [id(0x00000076)]
    HRESULT _stdcall WGetUserAttrs([in] BSTR ALogin, [in] BSTR APassword, [out] VARIANT* AUserData);
    [id(0x00000077)]
    HRESULT _stdcall WSetPatientFilter([in] BSTR ACardNum, [in] BSTR ASurname, [in] BSTR AFirstName, [in] long AOrder, [in] long ASelCode, [out] VARIANT* APatCount);
    [id(0x00000078)]
    HRESULT _stdcall WGetPatientsData([in] long AStartNum, [in] long ACount, [out] VARIANT* AData);
    [id(0x00000079)]
    HRESULT _stdcall WGetMediaTypes([out] VARIANT* AData);
    [id(0x0000007A)]
    HRESULT _stdcall WSetCurrentPatient([in] long APatientID);
    [id(0x0000007B)]
    HRESULT _stdcall WGetPatObjAttrs([in] long APatientID, [in] long ASelCode, [out] VARIANT* AData);
    [id(0x0000007C)]
    HRESULT _stdcall WGetSlidesThumbFiles([in] long APatientID, [in] BSTR ASlideIDs, [in] BSTR AThumbPath);
    [id(0x0000007D)]
    HRESULT _stdcall WGetSlideImageFile([in] long ASlideID, [in, out] VARIANT* AMaxWidth, [in, out] VARIANT* AMaxHeight, [in] long AFileFormat, [in] long AViewCont, [in] long AViewConv, [in] BSTR AFilePath);
    [id(0x0000007E)]
    HRESULT _stdcall WGetSlideStudyFile([in] long ASlideID, [in, out] VARIANT* AMaxWidth, [in, out] VARIANT* AMaxHeight, [in] long AFileFormat, [in] BSTR AFilePath, [out] VARIANT* AItemsRefs);
    [id(0x0000007F)]
    HRESULT _stdcall WGetSlideVideoFile([in] long ASlideID, [in] BSTR AFilePath);
    [id(0x00000080)]
    HRESULT _stdcall StartSession([in] long AStartCode);
    [id(0x00000081)]
    HRESULT _stdcall WSetCurrentUser([in] long AUserID);
    [id(0x00000082)]
    HRESULT _stdcall GetSlideImageFile([in] long ASlideID, [in, out] VARIANT* AMaxWidth, [in, out] VARIANT* AMaxHeight, [in] long AFileFormat, [in] long AViewCont, [in] BSTR AFileName);
  };

  [
    uuid(76E50575-9EB0-42C8-A484-2F88C39F945B), 
    version(1.0), 
    helpstring("D4WCMServer")
  ]
  coclass D4WCMServer
  {
    [default] interface ID4WCMServer;
  };

};